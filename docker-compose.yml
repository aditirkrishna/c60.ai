version: '3.8'

services:
  c60-ai:
    build: .
    container_name: c60-ai
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      - mlflow
      - postgres
    networks:
      - c60-network
    command: >
      bash -c "uvicorn c60.api:app --host 0.0.0.0 --port 8000 --reload"

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_IGNORE_TLS=true
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - mlflow_artifacts:/mlflow
    depends_on:
      - minio
      - postgres
    networks:
      - c60-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - c60-network

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - c60-network

  jupyter:
    build: .
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    environment:
      - JUPYTER_TOKEN=c60ai
    command: >
      bash -c "jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=c60ai"
    networks:
      - c60-network

volumes:
  mlflow_artifacts:
  minio_data:
  postgres_data:

networks:
  c60-network:
    driver: bridge
